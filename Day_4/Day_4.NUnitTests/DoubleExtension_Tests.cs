using Day_4_DoubleToIEEE754;
using NUnit.Framework;

namespace Day_4.NUnitTests
{
    [TestFixture]
    public class DoubleExtension_Tests
    {
        [TestCase(double.MinValue, "1111111111101111111111111111111111111111111111111111111111111111")]
        [TestCase(255.255, "0100000001101111111010000010100011110101110000101000111101011100")]
        [TestCase(0.255, "0011111111010000010100011110101110000101000111101011100001010010")]
        [TestCase(-255.255, "1100000001101111111010000010100011110101110000101000111101011100")]
        [TestCase(double.MaxValue, "0111111111101111111111111111111111111111111111111111111111111111")]
        [TestCase(double.Epsilon, "0000000000000000000000000000000000000000000000000000000000000001")]
        [TestCase(double.NaN, "1111111111111000000000000000000000000000000000000000000000000000")]
        [TestCase(double.NegativeInfinity, "1111111111110000000000000000000000000000000000000000000000000000")]
        [TestCase(double.PositiveInfinity, "0111111111110000000000000000000000000000000000000000000000000000")]
        [TestCase(0.0, "0000000000000000000000000000000000000000000000000000000000000000")]
        public void ToIEEE754_Test(double number, string expected)
        {
            string test = number.ToIEEE754();
            Assert.AreEqual(expected, test);
        }
    }
}
